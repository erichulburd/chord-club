{"version":3,"sources":["../../../node_modules/vexflow/src/glyph.js"],"names":["processOutline","outline","originX","originY","scaleX","scaleY","outlineFns","command","x","y","i","nextX","nextY","doOutline","args","length","Glyph","Element","lookupFontMetric","font","category","code","key","defaultValue","value","lookupMetric","lookupGlyph","fontStack","Vex","RERR","glyph","getGlyphs","loadMetrics","x_shift","y_shift","scale","x_min","x_max","ha","CACHE","o","cached_outline","split","renderGlyph","ctx","x_pos","y_pos","point","val","options","params","Flow","DEFAULT_FONT_STACK","metrics","getResolution","renderOutline","beginPath","moveTo","m","bind","l","lineTo","q","quadraticCurveTo","b","bezierCurveTo","fill","getOutlineBoundingBox","bboxComp","BoundingBoxComputation","addPoint","addQuadraticCurve","addBezierCurve","z","noOp","BoundingBox","x1","y1","width","height","constructor","setAttribute","getFontStack","originShift","setOptions","reset","getCode","setPoint","setStave","stave","setXShift","setYShift","bbox","getMetrics","RuntimeError","getW","getH","setOriginX","Math","abs","getX","xShift","setOriginY","getY","yShift","setOrigin","render","setRendered","applyStyle","restoreStyle","renderToStave","checkContext","context","getYForGlyphs"],"mappings":"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","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\nimport { Flow } from './tables';\nimport { Element } from './element';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { BoundingBox } from './boundingbox';\n\nfunction processOutline(outline, originX, originY, scaleX, scaleY, outlineFns) {\n  let command;\n  let x;\n  let y;\n  let i = 0;\n\n  function nextX() { return originX + outline[i++] * scaleX; }\n  function nextY() { return originY + outline[i++] * scaleY; }\n  function doOutline(command, ...args) {\n    outlineFns[command](...args);\n  }\n\n  while (i < outline.length) {\n    command = outline[i++];\n    switch (command) {\n      case 'm':\n      case 'l':\n        doOutline(command, nextX(), nextY());\n        break;\n      case 'q':\n        x = nextX();\n        y = nextY();\n        doOutline(command, nextX(), nextY(), x, y);\n        break;\n      case 'b':\n        x = nextX();\n        y = nextY();\n        doOutline(command, nextX(), nextY(), nextX(), nextY(), x, y);\n        break;\n      case 'z':\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class Glyph extends Element {\n  /*\n    Static methods used to implement loading and rendering glyphs.\n\n    Below categoryPath can be any metric path under 'glyphs', so stem.up would respolve\n    to glyphs.stem.up.shifX, glyphs.stem.up.shiftY, etc.\n  */\n  static lookupFontMetric({ font, category, code, key, defaultValue }) {\n    let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, null);\n    if (value === null) {\n      value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n    }\n    return value;\n  }\n\n  static lookupGlyph(fontStack, code) {\n    if (!fontStack) {\n      throw Vex.RERR('BAD_FONTSTACK', 'Font stack is misconfigured');\n    }\n\n    let glyph;\n    let font;\n    for (let i = 0; i < fontStack.length; i++) {\n      font = fontStack[i];\n      glyph = font.getGlyphs()[code];\n      if (glyph) break;\n    }\n\n    if (!glyph) {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n\n    return { glyph, font };\n  }\n\n\n  static loadMetrics(fontStack, code, category = null) {\n    const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n\n    const x_shift = category ? Glyph.lookupFontMetric({\n      font, category, code,\n      key: 'shiftX', defaultValue: 0\n    }) : 0;\n    const y_shift = category ? Glyph.lookupFontMetric({\n      font, category, code,\n      key: 'shiftY', defaultValue: 0\n    }) : 0;\n    const scale = category ? Glyph.lookupFontMetric({\n      font, category, code,\n      key: 'scale', defaultValue: 1\n    }) : 1;\n\n    const x_min = glyph.x_min;\n    const x_max = glyph.x_max;\n    const ha = glyph.ha;\n\n    let outline;\n\n    const CACHE = true;\n    if (glyph.o) {\n      if (CACHE) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min,\n        x_max,\n        x_shift,\n        y_shift,\n        scale,\n        ha,\n        outline,\n        font,\n      };\n    } else {\n      throw new Vex.RERR('BadGlyph', `Glyph ${code} has no outline defined.`);\n    }\n  }\n\n  /**\n   * A quick and dirty static glyph renderer. Renders glyphs from the default\n   * font defined in Vex.Flow.Font.\n   *\n   * @param {!Object} ctx The canvas context.\n   * @param {number} x_pos X coordinate.\n   * @param {number} y_pos Y coordinate.\n   * @param {number} point The point size to use.\n   * @param {string} val The glyph code in font.getGlyphs()\n   */\n  static renderGlyph(ctx, x_pos, y_pos, point, val, options) {\n    const params = {\n      fontStack: Flow.DEFAULT_FONT_STACK,\n      category: null,\n      ...options\n    };\n    const metrics = Glyph.loadMetrics(params.fontStack, val, params.category);\n    point = params.category ? Glyph.lookupFontMetric({\n      font: metrics.font,\n      category: params.category,\n      code: val,\n      key: 'point',\n      defaultValue: point\n    }) : point;\n    const scale = point * 72.0 / (metrics.font.getResolution() * 100.0);\n\n    Glyph.renderOutline(ctx, metrics.outline, scale * metrics.scale, x_pos + metrics.x_shift, y_pos + metrics.y_shift, options);\n    return metrics;\n  }\n\n  static renderOutline(ctx, outline, scale, x_pos, y_pos, options) {\n    ctx.beginPath();\n    ctx.moveTo(x_pos, y_pos);\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: ctx.moveTo.bind(ctx),\n      l: ctx.lineTo.bind(ctx),\n      q: ctx.quadraticCurveTo.bind(ctx),\n      b: ctx.bezierCurveTo.bind(ctx),\n      // z: ctx.fill.bind(ctx), // ignored\n    }, options);\n    ctx.fill();\n  }\n\n  static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n    const bboxComp = new BoundingBoxComputation();\n\n    processOutline(outline, x_pos, y_pos, scale, -scale, {\n      m: bboxComp.addPoint.bind(bboxComp),\n      l: bboxComp.addPoint.bind(bboxComp),\n      q: bboxComp.addQuadraticCurve.bind(bboxComp),\n      b: bboxComp.addBezierCurve.bind(bboxComp),\n      z: bboxComp.noOp.bind(bboxComp),\n    });\n\n    return new BoundingBox(\n      bboxComp.x1,\n      bboxComp.y1,\n      bboxComp.width(),\n      bboxComp.height()\n    );\n  }\n\n  /**\n   * @constructor\n   */\n  constructor(code, point, options) {\n    super();\n    this.setAttribute('type', 'Glyph');\n\n    this.code = code;\n    this.point = point;\n    this.options = {\n      fontStack: this.getFontStack(),\n      category: null,\n    };\n\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    this.originShift = {\n      x: 0,\n      y: 0,\n    };\n\n    if (options) {\n      this.setOptions(options);\n    } else {\n      this.reset();\n    }\n  }\n\n  getCode() {\n    return this.code;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.options, ...options };\n    this.reset();\n  }\n\n  setPoint(point) { this.point = point; return this; }\n  setStave(stave) { this.stave = stave; return this; }\n  setXShift(x_shift) { this.x_shift = x_shift; return this; }\n  setYShift(y_shift) { this.y_shift = y_shift; return this; }\n\n  reset() {\n    this.metrics = Glyph.loadMetrics(this.options.fontStack, this.code, this.options.category);\n    // Override point from metrics file\n    this.point = this.options.category ? Glyph.lookupFontMetric({\n      category: this.options.category,\n      font: this.metrics.font,\n      code: this.code,\n      key: 'point',\n      defaultValue: this.point,\n    }) : this.point;\n\n    this.scale = this.point * 72 / (this.metrics.font.getResolution() * 100);\n    this.bbox = Glyph.getOutlineBoundingBox(\n      this.metrics.outline,\n      this.scale * this.metrics.scale,\n      this.metrics.x_shift,\n      this.metrics.y_shift,\n    );\n  }\n\n  getMetrics() {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    return {\n      x_min: this.metrics.x_min * this.scale * this.metrics.scale,\n      x_max: this.metrics.x_max * this.scale * this.metrics.scale,\n      width: this.bbox.getW(),\n      height: this.bbox.getH(),\n    };\n  }\n\n  setOriginX(x) {\n    const { bbox } = this;\n    const originX = Math.abs(bbox.getX() / bbox.getW());\n    const xShift = (x - originX) * bbox.getW();\n    this.originShift.x = -xShift;\n  }\n\n  setOriginY(y) {\n    const { bbox } = this;\n    const originY = Math.abs(bbox.getY() / bbox.getH());\n    const yShift = (y - originY) * bbox.getH();\n    this.originShift.y = -yShift;\n  }\n\n  setOrigin(x, y) {\n    this.setOriginX(x);\n    this.setOriginY(y);\n  }\n\n  render(ctx, x, y) {\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale * this.metrics.scale;\n\n    this.setRendered();\n    this.applyStyle(ctx);\n    Glyph.renderOutline(ctx, outline, scale,\n      x + this.originShift.x + this.metrics.x_shift,\n      y + this.originShift.y + this.metrics.y_shift);\n    this.restoreStyle(ctx);\n  }\n\n  renderToStave(x) {\n    this.checkContext();\n\n    if (!this.metrics) {\n      throw new Vex.RuntimeError('BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n\n    if (!this.stave) {\n      throw new Vex.RuntimeError('GlyphError', 'No valid stave');\n    }\n\n    const outline = this.metrics.outline;\n    const scale = this.scale * this.metrics.scale;\n\n    this.setRendered();\n    this.applyStyle();\n    Glyph.renderOutline(this.context, outline, scale,\n      x + this.x_shift + this.metrics.x_shift, this.stave.getYForGlyphs() + this.y_shift + this.metrics.y_shift);\n    this.restoreStyle();\n  }\n}\n"],"file":"glyph.js"}