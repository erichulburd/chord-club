{"version":3,"sources":["../../../node_modules/vexflow/src/stavetie.js"],"names":["StaveTie","Element","constructor","notes","text","setAttribute","context","direction","render_options","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","y_shift","tie_spacing","font","family","size","style","setNotes","setFont","setDirection","first_note","last_note","Vex","RuntimeError","first_indices","last_indices","length","isPartial","renderTie","params","first_ys","last_ys","RERR","ctx","Math","abs","last_x_px","first_x_px","i","cp_x","first_y_px","last_y_px","isNaN","top_cp_y","bottom_cp_y","beginPath","moveTo","quadraticCurveTo","closePath","fill","renderText","center_x","measureText","width","save","fillText","getStave","getYForTopText","restore","draw","checkContext","setRendered","stem_direction","getTieRightX","getStemDirection","getYs","getTieStartX","getTieLeftX","getTieEndX"],"mappings":"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","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\n\nexport class StaveTie extends Element {\n  constructor(notes, text) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveTie');\n    this.notes = notes;\n    this.context = null;\n    this.text = text;\n    this.direction = null;\n\n    this.render_options = {\n      cp1: 8,      // Curve control point 1\n      cp2: 12,      // Curve control point 2\n      text_shift_x: 0,\n      first_x_shift: 0,\n      last_x_shift: 0,\n      y_shift: 7,\n      tie_spacing: 0,\n      font: { family: 'Arial', size: 10, style: '' },\n    };\n\n    this.font = this.render_options.font;\n    this.setNotes(notes);\n  }\n\n  setFont(font) { this.font = font; return this; }\n  setDirection(direction) { this.direction = direction; return this; }\n\n  /**\n   * Set the notes to attach this tie to.\n   *\n   * @param {!Object} notes The notes to tie up.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments', 'Tie needs to have either first_note or last_note set.'\n      );\n    }\n\n    if (!notes.first_indices) notes.first_indices = [0];\n    if (!notes.last_indices) notes.last_indices = [0];\n\n    if (notes.first_indices.length !== notes.last_indices.length) {\n      throw new Vex.RuntimeError('BadArguments', 'Tied notes must have similar index sizes');\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.first_indices = notes.first_indices;\n    this.last_note = notes.last_note;\n    this.last_indices = notes.last_indices;\n    return this;\n  }\n\n  /**\n   * @return {boolean} Returns true if this is a partial bar.\n   */\n  isPartial() {\n    return (!this.first_note || !this.last_note);\n  }\n\n  renderTie(params) {\n    if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n      throw new Vex.RERR('BadArguments', 'No Y-values to render');\n    }\n\n    const ctx = this.context;\n    let cp1 = this.render_options.cp1;\n    let cp2 = this.render_options.cp2;\n\n    if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n      cp1 = 2; cp2 = 8;\n    }\n\n    const first_x_shift = this.render_options.first_x_shift;\n    const last_x_shift = this.render_options.last_x_shift;\n    const y_shift = this.render_options.y_shift * params.direction;\n\n    for (let i = 0; i < this.first_indices.length; ++i) {\n      const cp_x = ((params.last_x_px + last_x_shift) +\n          (params.first_x_px + first_x_shift)) / 2;\n      const first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n      const last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n      if (isNaN(first_y_px) || isNaN(last_y_px)) {\n        throw new Vex.RERR('BadArguments', 'Bad indices for tie rendering.');\n      }\n\n      const top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n      const bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n      ctx.beginPath();\n      ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n      ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n      ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n      ctx.closePath();\n      ctx.fill();\n    }\n  }\n\n  renderText(first_x_px, last_x_px) {\n    if (!this.text) return;\n    let center_x = (first_x_px + last_x_px) / 2;\n    center_x -= this.context.measureText(this.text).width / 2;\n\n    this.context.save();\n    this.context.setFont(this.font.family, this.font.size, this.font.style);\n    this.context.fillText(\n      this.text,\n      center_x + this.render_options.text_shift_x,\n      (this.first_note || this.last_note).getStave().getYForTopText() - 1\n    );\n    this.context.restore();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const first_note = this.first_note;\n    const last_note = this.last_note;\n\n    let first_x_px;\n    let last_x_px;\n    let first_ys;\n    let last_ys;\n    let stem_direction;\n    if (first_note) {\n      first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n      stem_direction = first_note.getStemDirection();\n      first_ys = first_note.getYs();\n    } else {\n      first_x_px = last_note.getStave().getTieStartX();\n      first_ys = last_note.getYs();\n      this.first_indices = this.last_indices;\n    }\n\n    if (last_note) {\n      last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n      stem_direction = last_note.getStemDirection();\n      last_ys = last_note.getYs();\n    } else {\n      last_x_px = first_note.getStave().getTieEndX();\n      last_ys = first_note.getYs();\n      this.last_indices = this.first_indices;\n    }\n\n    if (this.direction) {\n      stem_direction = this.direction;\n    }\n\n    this.renderTie({\n      first_x_px,\n      last_x_px,\n      first_ys,\n      last_ys,\n      direction: stem_direction,\n    });\n\n    this.renderText(first_x_px, last_x_px);\n    return true;\n  }\n}\n"],"file":"stavetie.js"}