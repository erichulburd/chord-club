{"version":3,"sources":["../../../node_modules/vexflow/src/renderer.js"],"names":["lastContext","Renderer","Backends","CANVAS","RAPHAEL","SVG","VML","LineEndType","NONE","UP","DOWN","USE_CANVAS_PROXY","ctx","buildContext","elementId","backend","width","height","background","renderer","resize","getContext","setBackgroundFillStyle","getCanvasContext","getRaphaelContext","getSVGContext","bolsterCanvasContext","CanvasContext","methodNames","vexFlowCanvasContext","forEach","methodName","prototype","drawDashedLine","context","fromX","fromY","toX","toY","dashPattern","beginPath","dx","dy","angle","Math","atan2","x","y","moveTo","idx","draw","dashLength","length","nx","cos","max","min","ny","sin","lineTo","closePath","stroke","constructor","Vex","RERR","element","document","getElementById","paper","RaphaelContext","SVGContext","SanitizeCanvasDims","devicePixelRatio","window","style","scale"],"mappings":"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","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Support for different rendering contexts: Canvas, Raphael\n\nimport { CanvasContext } from './canvascontext';\nimport { RaphaelContext } from './raphaelcontext';\nimport { SVGContext } from './svgcontext';\nimport { Vex } from './vex';\n\nlet lastContext = null;\n\nexport class Renderer {\n  static get Backends() {\n    return {\n      CANVAS: 1,\n      RAPHAEL: 2,\n      SVG: 3,\n      VML: 4,\n    };\n  }\n\n  // End of line types\n  static get LineEndType() {\n    return {\n      NONE: 1, // No leg\n      UP: 2,   // Upward leg\n      DOWN: 3, // Downward leg\n    };\n  }\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  static get USE_CANVAS_PROXY() {\n    return false;\n  }\n\n  static get lastContext() {\n    return lastContext;\n  }\n  static set lastContext(ctx) {\n    lastContext = ctx;\n  }\n\n  static buildContext(elementId, backend, width, height, background) {\n    const renderer = new Renderer(elementId, backend);\n    if (width && height) {\n      renderer.resize(width, height);\n    }\n\n    if (!background) background = '#FFF';\n    const ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    Renderer.lastContext = ctx;\n    return ctx;\n  }\n\n  static getCanvasContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n  }\n\n  static getRaphaelContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.RAPHAEL, width, height, background);\n  }\n\n  static getSVGContext(elementId, width, height, background) {\n    return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n  }\n\n  static bolsterCanvasContext(ctx) {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new CanvasContext(ctx);\n    }\n\n    const methodNames = [\n      'clear', 'setFont', 'setRawFont', 'setFillStyle', 'setBackgroundFillStyle',\n      'setStrokeStyle', 'setShadowColor', 'setShadowBlur', 'setLineWidth',\n      'setLineCap', 'setLineDash', 'openGroup', 'closeGroup', 'getGroup',\n    ];\n\n    ctx.vexFlowCanvasContext = ctx;\n\n    methodNames.forEach(methodName => {\n      ctx[methodName] = ctx[methodName] || CanvasContext.prototype[methodName];\n    });\n\n    return ctx;\n  }\n\n  // Draw a dashed line (horizontal, vertical or diagonal\n  // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  // setting the second number to 0 draws a solid line.\n  static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n    context.beginPath();\n\n    const dx = toX - fromX;\n    const dy = toY - fromY;\n    const angle = Math.atan2(dy, dx);\n    let x = fromX;\n    let y = fromY;\n    context.moveTo(fromX, fromY);\n    let idx = 0;\n    let draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      const dashLength = dashPattern[idx++ % dashPattern.length];\n      const nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      const ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n      draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  }\n\n  constructor(elementId, backend) {\n    this.elementId = elementId;\n    if (!this.elementId) {\n      throw new Vex.RERR('BadArgument', 'Invalid id for renderer.');\n    }\n\n    this.element = document.getElementById(elementId);\n    if (!this.element) this.element = elementId;\n\n    // Verify backend and create context\n    this.ctx = null;\n    this.paper = null;\n    this.backend = backend;\n    if (this.backend === Renderer.Backends.CANVAS) {\n      // Create context.\n      if (!this.element.getContext) {\n        throw new Vex.RERR('BadElement', `Can't get canvas context from element: ${elementId}`);\n      }\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n    } else if (this.backend === Renderer.Backends.RAPHAEL) {\n      this.ctx = new RaphaelContext(this.element);\n    } else if (this.backend === Renderer.Backends.SVG) {\n      this.ctx = new SVGContext(this.element);\n    } else {\n      throw new Vex.RERR('InvalidBackend', `No support for backend: ${this.backend}`);\n    }\n  }\n\n  resize(width, height) {\n    if (this.backend === Renderer.Backends.CANVAS) {\n      if (!this.element.getContext) {\n        throw new Vex.RERR(\n          'BadElement', `Can't get canvas context from element: ${this.elementId}`\n        );\n      }\n      [width, height] = CanvasContext.SanitizeCanvasDims(width, height);\n\n      const devicePixelRatio = window.devicePixelRatio || 1;\n\n      this.element.width = width * devicePixelRatio;\n      this.element.height = height * devicePixelRatio;\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n\n      this.ctx = Renderer.bolsterCanvasContext(this.element.getContext('2d'));\n      this.ctx.scale(devicePixelRatio, devicePixelRatio);\n    } else {\n      this.ctx.resize(width, height);\n    }\n\n    return this;\n  }\n\n  getContext() { return this.ctx; }\n}\n"],"file":"renderer.js"}