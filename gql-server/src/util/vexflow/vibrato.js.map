{"version":3,"sources":["../../../node_modules/vexflow/src/vibrato.js"],"names":["Vibrato","Modifier","CATEGORY","format","vibratos","state","context","length","text_line","top_text_line","width","shift","right_shift","bends","getModifiers","Bend","i","vibrato","setXShift","setTextLine","getWidth","constructor","setAttribute","position","Position","RIGHT","render_options","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","getCategory","setHarsh","setWidth","draw","ctx","checkContext","note","Vex","RERR","setRendered","start","getModifierStartXY","index","vx","x","x_shift","vy","getYForTopText","renderVibrato","y","opts","num_waves","beginPath","moveTo","lineTo","fill","quadraticCurveTo"],"mappings":"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","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements vibratos.\n\nimport { Vex } from './vex';\nimport { Modifier } from './modifier';\nimport { Bend } from './bend';\n\nexport class Vibrato extends Modifier {\n  static get CATEGORY() { return 'vibratos'; }\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  static format(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    // Vibratos are always on top.\n    let text_line = state.top_text_line;\n    let width = 0;\n    let shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    const bends = context.getModifiers(Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (let i = 0; i < vibratos.length; ++i) {\n      const vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.top_text_line += 1;\n    return true;\n  }\n\n  // ## Prototype Methods\n  constructor() {\n    super();\n    this.setAttribute('type', 'Vibrato');\n\n    this.position = Modifier.Position.RIGHT;\n    this.render_options = {\n      harsh: false,\n      vibrato_width: 20,\n      wave_height: 6,\n      wave_width: 4,\n      wave_girth: 2,\n    };\n\n    this.setVibratoWidth(this.render_options.vibrato_width);\n  }\n  getCategory() { return Vibrato.CATEGORY; }\n  setHarsh(harsh) { this.render_options.harsh = harsh; return this; }\n  setVibratoWidth(width) {\n    this.render_options.vibrato_width = width;\n    this.setWidth(width);\n    return this;\n  }\n\n  draw() {\n    const ctx = this.checkContext();\n\n    if (!this.note) {\n      throw new Vex.RERR('NoNoteForVibrato', \"Can't draw vibrato without an attached note.\");\n    }\n\n    this.setRendered();\n    const start = this.note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n\n    const vx = start.x + this.x_shift;\n    const vy = this.note.getYForTopText(this.text_line) + 2;\n\n    Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n  }\n\n  // Static rendering method that can be called from\n  // other classes (e.g. VibratoBracket)\n  static renderVibrato(ctx, x, y, opts) {\n    const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n    const num_waves = vibrato_width / wave_width;\n\n    ctx.beginPath();\n\n    let i;\n    if (harsh) {\n      ctx.moveTo(x, y + wave_girth + 1);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x + wave_width, y - (wave_height / 2));\n        x += wave_width;\n        ctx.lineTo(x + wave_width, y + (wave_height / 2));\n        x += wave_width;\n      }\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n        ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n        x -= wave_width;\n      }\n      ctx.fill();\n    } else {\n      ctx.moveTo(x, y + wave_girth);\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n        ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2), x + wave_width, y);\n        x += wave_width;\n      }\n\n      for (i = 0; i < num_waves / 2; ++i) {\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y + (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n        ctx.quadraticCurveTo(\n          x - (wave_width / 2),\n          (y - (wave_height / 2)) + wave_girth,\n          x - wave_width, y + wave_girth);\n        x -= wave_width;\n      }\n      ctx.fill();\n    }\n  }\n}\n"],"file":"vibrato.js"}