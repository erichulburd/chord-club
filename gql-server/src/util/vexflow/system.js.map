{"version":3,"sources":["../../../node_modules/vexflow/src/system.js"],"names":["System","Element","constructor","params","setAttribute","setOptions","parts","options","x","y","width","connector","spaceBetweenStaves","factory","noJustification","debugFormatter","formatIterations","noPadding","details","alpha","Factory","renderer","el","setContext","context","addConnector","type","StaveConnector","top_stave","stave","bottom_stave","length","addStave","voices","spaceAbove","spaceBelow","debugNoteMetrics","left_bar","Stave","forEach","voice","setStave","getTickables","tickable","push","format","formatter","Formatter","startX","allVoices","debugNoteMetricsYs","part","space","setY","joinVoices","concat","Math","max","getNoteStartX","setNoteStartX","justifyWidth","musicFont","lookupMetric","i","tune","lastY","draw","ctx","checkContext","setRendered","plotDebugging","d","note","Note","plotMetrics"],"mappings":"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","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements a musical system, which is a collection of staves,\n// each which can have one or more voices. All voices across all staves in\n// the system are formatted together.\n\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\n\nexport class System extends Element {\n  constructor(params = {}) {\n    super();\n    this.setAttribute('type', 'System');\n    this.setOptions(params);\n    this.parts = [];\n  }\n\n  setOptions(options = {}) {\n    this.options = {\n      x: 10,\n      y: 10,\n      width: 500,\n      connector: null,\n      spaceBetweenStaves: 12, // stave spaces\n      factory: null,\n      noJustification: false,\n      debugFormatter: false,\n      formatIterations: 0,   // number of formatter tuning steps\n      noPadding: false,\n      ...options,\n      details: {\n        alpha: 0.5,          // formatter tuner learning/shifting rate\n        ...options.details,\n      },\n    };\n\n    this.factory = this.options.factory || new Factory({ renderer: { el: null } });\n  }\n\n  setContext(context) {\n    super.setContext(context);\n    this.factory.setContext(context);\n    return this;\n  }\n\n  addConnector(type = 'double') {\n    this.connector = this.factory.StaveConnector({\n      top_stave: this.parts[0].stave,\n      bottom_stave: this.parts[this.parts.length - 1].stave,\n      type,\n    });\n    return this.connector;\n  }\n\n  addStave(params) {\n    params = {\n      stave: null,\n      voices: [],\n      spaceAbove: 0, // stave spaces\n      spaceBelow: 0, // stave spaces\n      debugNoteMetrics: false,\n      ...params,\n      options: {\n        left_bar: false,\n        ...params.options,\n      },\n    };\n\n    if (!params.stave) {\n      params.stave = this.factory.Stave({\n        x: this.options.x,\n        y: this.options.y,\n        width: this.options.width,\n        options: params.options,\n      });\n    }\n\n    params.voices.forEach(voice =>\n      voice\n        .setContext(this.context)\n        .setStave(params.stave)\n        .getTickables()\n        .forEach(tickable => tickable.setStave(params.stave))\n    );\n\n    this.parts.push(params);\n    return params.stave;\n  }\n\n  format() {\n    const formatter = new Formatter({ ...this.options.details });\n    this.formatter = formatter;\n\n    let y = this.options.y;\n    let startX = 0;\n    let allVoices = [];\n    const debugNoteMetricsYs = [];\n\n    // Join the voices for each stave.\n    this.parts.forEach(part => {\n      y = y + part.stave.space(part.spaceAbove);\n      part.stave.setY(y);\n      formatter.joinVoices(part.voices);\n      y = y + part.stave.space(part.spaceBelow);\n      y = y + part.stave.space(this.options.spaceBetweenStaves);\n      if (part.debugNoteMetrics) {\n        debugNoteMetricsYs.push({ y, voice: part.voices[0] });\n        y += 15;\n      }\n      allVoices = allVoices.concat(part.voices);\n\n      startX = Math.max(startX, part.stave.getNoteStartX());\n    });\n\n    // Update the start position of all staves.\n    this.parts.forEach(part => part.stave.setNoteStartX(startX));\n    const justifyWidth = this.options.noPadding ?\n      this.options.width - this.options.x :\n      this.options.width - (startX - this.options.x) - this.musicFont.lookupMetric('stave.padding');\n\n    formatter.format(allVoices, this.options.noJustification ? 0 : justifyWidth);\n\n    for (let i = 0; i < this.options.formatIterations; i++) {\n      formatter.tune({ alpha: this.options.details.alpha });\n    }\n\n    this.startX = startX;\n    this.debugNoteMetricsYs = debugNoteMetricsYs;\n    this.lastY = y;\n  }\n\n  draw() {\n    // Render debugging information, if requested.\n    const ctx = this.checkContext();\n    this.setRendered();\n\n    if (this.options.debugFormatter) {\n      Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n    }\n\n    this.debugNoteMetricsYs.forEach(d => {\n      d.voice.getTickables().forEach(note => Note.plotMetrics(ctx, note, d.y));\n    });\n  }\n}\n"],"file":"system.js"}