{"version":3,"sources":["../../../node_modules/vexflow/src/timesignature.js"],"names":["assertIsValidFraction","timeSpec","numbers","split","filter","number","length","Vex","RERR","forEach","isNaN","Number","TimeSignature","StaveModifier","CATEGORY","glyphs","code","point","line","constructor","customPadding","validate_args","setAttribute","padding","musicFont","lookupMetric","fontLineShift","topLine","bottomLine","setPosition","Position","BEGIN","setTimeSig","setWidth","timeSig","glyph","getMetrics","width","setPadding","getCategory","parseTimeSpec","num","Glyph","topDigits","botDigits","map","makeTimeSignatureGlyph","topGlyphs","botGlyphs","topWidth","i","topGlyph","push","botWidth","botGlyph","xMin","x_min","x_max","topStartX","botStartX","that","renderToStave","x","start_x","renderOutline","context","metrics","outline","scale","x_shift","stave","getYForLine","placeGlyphOnLine","getTimeSig","draw","setRendered","setStave","setContext"],"mappings":"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","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n\nimport { Vex } from './vex';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\n\nconst assertIsValidFraction = (timeSpec) => {\n  const numbers = timeSpec.split('/').filter(number => number !== '');\n\n  if (numbers.length !== 2) {\n    throw new Vex.RERR(\n      'BadTimeSignature',\n      `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`\n    );\n  }\n\n  numbers.forEach(number => {\n    if (isNaN(Number(number))) {\n      throw new Vex.RERR(\n        'BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain two valid numbers.`\n      );\n    }\n  });\n};\n\nexport class TimeSignature extends StaveModifier {\n  static get CATEGORY() { return 'timesignatures'; }\n\n  static get glyphs() {\n    return {\n      'C': {\n        code: 'timeSigCommon',\n        point: 40,\n        line: 2,\n      },\n      'C|': {\n        code: 'timeSigCutCommon',\n        point: 40,\n        line: 2,\n      },\n    };\n  }\n\n  constructor(timeSpec = null, customPadding = 15, validate_args = true) {\n    super();\n    this.setAttribute('type', 'TimeSignature');\n    this.validate_args = validate_args;\n\n    if (timeSpec === null) return;\n\n    const padding = customPadding;\n\n    this.point = this.musicFont.lookupMetric('digits.point');\n    const fontLineShift = this.musicFont.lookupMetric('digits.shiftLine', 0);\n    this.topLine = 2 + fontLineShift;\n    this.bottomLine = 4 + fontLineShift;\n    this.setPosition(StaveModifier.Position.BEGIN);\n    this.setTimeSig(timeSpec);\n    this.setWidth(this.timeSig.glyph.getMetrics().width);\n    this.setPadding(padding);\n  }\n\n  getCategory() { return TimeSignature.CATEGORY; }\n\n  parseTimeSpec(timeSpec) {\n    if (timeSpec === 'C' || timeSpec === 'C|') {\n      const { line, code, point } = TimeSignature.glyphs[timeSpec];\n      return {\n        line,\n        num: false,\n        glyph: new Glyph(code, point),\n      };\n    }\n\n    if (this.validate_args) {\n      assertIsValidFraction(timeSpec);\n    }\n\n    const [topDigits, botDigits] = timeSpec\n      .split('/')\n      .map(number => number.split(''));\n\n    return {\n      num: true,\n      glyph: this.makeTimeSignatureGlyph(topDigits, botDigits),\n    };\n  }\n\n  makeTimeSignatureGlyph(topDigits, botDigits) {\n    const glyph = new Glyph('timeSig0', this.point);\n    glyph.topGlyphs = [];\n    glyph.botGlyphs = [];\n\n    let topWidth = 0;\n    for (let i = 0; i < topDigits.length; ++i) {\n      const num = topDigits[i];\n      const topGlyph = new Glyph('timeSig' + num, this.point);\n\n      glyph.topGlyphs.push(topGlyph);\n      topWidth += topGlyph.getMetrics().width;\n    }\n\n    let botWidth = 0;\n    for (let i = 0; i < botDigits.length; ++i) {\n      const num = botDigits[i];\n      const botGlyph = new Glyph('timeSig' + num, this.point);\n\n      glyph.botGlyphs.push(botGlyph);\n      botWidth += botGlyph.getMetrics().width;\n    }\n\n    const width = topWidth > botWidth ? topWidth : botWidth;\n    const xMin = glyph.getMetrics().x_min;\n\n    glyph.getMetrics = () => ({\n      x_min: xMin,\n      x_max: xMin + width,\n      width,\n    });\n\n    const topStartX = (width - topWidth) / 2.0;\n    const botStartX = (width - botWidth) / 2.0;\n\n    const that = this;\n    glyph.renderToStave = function renderToStave(x) {\n      let start_x = x + topStartX;\n      for (let i = 0; i < this.topGlyphs.length; ++i) {\n        const glyph = this.topGlyphs[i];\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.topLine)\n        );\n        start_x += glyph.getMetrics().width;\n      }\n\n      start_x = x + botStartX;\n      for (let i = 0; i < this.botGlyphs.length; ++i) {\n        const glyph = this.botGlyphs[i];\n        that.placeGlyphOnLine(glyph, this.stave, glyph.line);\n        Glyph.renderOutline(\n          this.context,\n          glyph.metrics.outline,\n          glyph.scale,\n          start_x + glyph.x_shift,\n          this.stave.getYForLine(that.bottomLine)\n        );\n        start_x += glyph.getMetrics().width;\n      }\n    };\n\n    return glyph;\n  }\n\n  getTimeSig() {\n    return this.timeSig;\n  }\n\n  setTimeSig(timeSpec) {\n    this.timeSig = this.parseTimeSpec(timeSpec);\n    return this;\n  }\n\n  draw() {\n    if (!this.x) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without x.\");\n    }\n\n    if (!this.stave) {\n      throw new Vex.RERR('TimeSignatureError', \"Can't draw time signature without stave.\");\n    }\n\n    this.setRendered();\n    this.timeSig.glyph.setStave(this.stave);\n    this.timeSig.glyph.setContext(this.stave.context);\n    this.placeGlyphOnLine(this.timeSig.glyph, this.stave, this.timeSig.line);\n    this.timeSig.glyph.renderToStave(this.x);\n  }\n}\n"],"file":"timesignature.js"}