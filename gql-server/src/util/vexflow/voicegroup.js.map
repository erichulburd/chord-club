{"version":3,"sources":["../../../node_modules/vexflow/src/voicegroup.js"],"names":["VoiceGroup","constructor","voices","modifierContexts","getVoices","getModifierContexts","addVoice","voice","Vex","RERR","push","setVoiceGroup"],"mappings":";;;;;;;AAEA;;AAFA;;AAIA;AACO,MAAMA,UAAN,CAAiB;AACtBC,EAAAA,WAAW,GAAG;AACZ,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKC,gBAAL,GAAwB,EAAxB;AACD,GAJqB,CAMtB;AACA;;;AACAC,EAAAA,SAAS,GAAG;AAAE,WAAO,KAAKF,MAAZ;AAAqB;;AACnCG,EAAAA,mBAAmB,GAAG;AAAE,WAAO,KAAKF,gBAAZ;AAA+B;;AAEvDG,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,QAAI,CAACA,KAAL,EAAY,MAAM,IAAIC,SAAIC,IAAR,CAAa,cAAb,EAA6B,uBAA7B,CAAN;AACZ,SAAKP,MAAL,CAAYQ,IAAZ,CAAiBH,KAAjB;AACAA,IAAAA,KAAK,CAACI,aAAN,CAAoB,IAApB;AACD;;AAfqB;;QAAXX,U,GAAAA,U","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n\nimport { Vex } from './vex';\n\n/** @constructor */\nexport class VoiceGroup {\n  constructor() {\n    this.voices = [];\n    this.modifierContexts = [];\n  }\n\n  // Every tickable must be associated with a voiceGroup. This allows formatters\n  // and preformatters to associate them with the right modifierContexts.\n  getVoices() { return this.voices; }\n  getModifierContexts() { return this.modifierContexts; }\n\n  addVoice(voice) {\n    if (!voice) throw new Vex.RERR('BadArguments', 'Voice cannot be null.');\n    this.voices.push(voice);\n    voice.setVoiceGroup(this);\n  }\n}\n"],"file":"voicegroup.js"}