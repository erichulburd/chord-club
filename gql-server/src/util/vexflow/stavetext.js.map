{"version":3,"sources":["../../../node_modules/vexflow/src/stavetext.js"],"names":["StaveText","StaveModifier","CATEGORY","constructor","text","position","options","setAttribute","setWidth","shift_x","shift_y","justification","TextNote","Justification","CENTER","Vex","Merge","font","family","size","weight","getCategory","setStaveText","setShiftX","x","setShiftY","y","setFont","setText","draw","stave","ctx","checkContext","setRendered","save","lineWidth","text_width","measureText","width","Position","LEFT","RIGHT","getYForLine","getBottomLineY","getX","getWidth","ABOVE","BELOW","getYForTopText","getYForBottomText","RERR","fillText","restore"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AALA;AACA;AAMO,MAAMA,SAAN,SAAwBC,4BAAxB,CAAsC;AAC3C,aAAWC,QAAX,GAAsB;AAAE,WAAO,WAAP;AAAqB;;AAE7CC,EAAAA,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,EAA0B;AACnC;AACA,SAAKC,YAAL,CAAkB,MAAlB,EAA0B,WAA1B;AAEA,SAAKC,QAAL,CAAc,EAAd;AACA,SAAKJ,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAe;AACbG,MAAAA,OAAO,EAAE,CADI;AAEbC,MAAAA,OAAO,EAAE,CAFI;AAGbC,MAAAA,aAAa,EAAEC,mBAASC,aAAT,CAAuBC;AAHzB,KAAf;;AAKAC,aAAIC,KAAJ,CAAU,KAAKV,OAAf,EAAwBA,OAAxB;;AAEA,SAAKW,IAAL,GAAY;AACVC,MAAAA,MAAM,EAAE,OADE;AAEVC,MAAAA,IAAI,EAAE,EAFI;AAGVC,MAAAA,MAAM,EAAE;AAHE,KAAZ;AAKD;;AAEDC,EAAAA,WAAW,GAAG;AAAE,WAAOrB,SAAS,CAACE,QAAjB;AAA4B;;AAC5CoB,EAAAA,YAAY,CAAClB,IAAD,EAAO;AAAE,SAAKA,IAAL,GAAYA,IAAZ;AAAkB,WAAO,IAAP;AAAc;;AACrDmB,EAAAA,SAAS,CAACC,CAAD,EAAI;AAAE,SAAKf,OAAL,GAAee,CAAf;AAAkB,WAAO,IAAP;AAAc;;AAC/CC,EAAAA,SAAS,CAACC,CAAD,EAAI;AAAE,SAAKhB,OAAL,GAAegB,CAAf;AAAkB,WAAO,IAAP;AAAc;;AAE/CC,EAAAA,OAAO,CAACV,IAAD,EAAO;AACZF,aAAIC,KAAJ,CAAU,KAAKC,IAAf,EAAqBA,IAArB;AACD;;AAEDW,EAAAA,OAAO,CAACxB,IAAD,EAAO;AACZ,SAAKA,IAAL,GAAYA,IAAZ;AACD;;AAEDyB,EAAAA,IAAI,CAACC,KAAD,EAAQ;AACV,UAAMC,GAAG,GAAGD,KAAK,CAACE,YAAN,EAAZ;AACA,SAAKC,WAAL;AAEAF,IAAAA,GAAG,CAACG,IAAJ;AACAH,IAAAA,GAAG,CAACI,SAAJ,GAAgB,CAAhB;AACAJ,IAAAA,GAAG,CAACJ,OAAJ,CAAY,KAAKV,IAAL,CAAUC,MAAtB,EAA8B,KAAKD,IAAL,CAAUE,IAAxC,EAA8C,KAAKF,IAAL,CAAUG,MAAxD;AACA,UAAMgB,UAAU,GAAGL,GAAG,CAACM,WAAJ,CAAgB,KAAK,KAAKjC,IAA1B,EAAgCkC,KAAnD;AAEA,QAAId,CAAJ;AACA,QAAIE,CAAJ;AACA,UAAMa,QAAQ,GAAGtC,6BAAcsC,QAA/B;AACA,UAAM1B,aAAa,GAAGD,mBAASC,aAA/B;;AACA,YAAQ,KAAKR,QAAb;AACE,WAAKkC,QAAQ,CAACC,IAAd;AACA,WAAKD,QAAQ,CAACE,KAAd;AACEf,QAAAA,CAAC,GAAG,CAACI,KAAK,CAACY,WAAN,CAAkB,CAAlB,IAAuBZ,KAAK,CAACa,cAAN,EAAxB,IAAkD,CAAlD,GAAsD,KAAKrC,OAAL,CAAaI,OAAvE;;AACA,YAAI,KAAKL,QAAL,KAAkBkC,QAAQ,CAACC,IAA/B,EAAqC;AACnChB,UAAAA,CAAC,GAAGM,KAAK,CAACc,IAAN,KAAeR,UAAf,GAA4B,EAA5B,GAAiC,KAAK9B,OAAL,CAAaG,OAAlD;AACD,SAFD,MAEO;AACLe,UAAAA,CAAC,GAAGM,KAAK,CAACc,IAAN,KAAed,KAAK,CAACe,QAAN,EAAf,GAAkC,EAAlC,GAAuC,KAAKvC,OAAL,CAAaG,OAAxD;AACD;;AACD;;AACF,WAAK8B,QAAQ,CAACO,KAAd;AACA,WAAKP,QAAQ,CAACQ,KAAd;AACEvB,QAAAA,CAAC,GAAGM,KAAK,CAACc,IAAN,KAAe,KAAKtC,OAAL,CAAaG,OAAhC;;AACA,YAAI,KAAKH,OAAL,CAAaK,aAAb,KAA+BE,aAAa,CAACC,MAAjD,EAAyD;AACvDU,UAAAA,CAAC,IAAIM,KAAK,CAACe,QAAN,KAAmB,CAAnB,GAAuBT,UAAU,GAAG,CAAzC;AACD,SAFD,MAEO,IAAI,KAAK9B,OAAL,CAAaK,aAAb,KAA+BE,aAAa,CAAC4B,KAAjD,EAAwD;AAC7DjB,UAAAA,CAAC,IAAIM,KAAK,CAACe,QAAN,KAAmBT,UAAxB;AACD;;AAED,YAAI,KAAK/B,QAAL,KAAkBkC,QAAQ,CAACO,KAA/B,EAAsC;AACpCpB,UAAAA,CAAC,GAAGI,KAAK,CAACkB,cAAN,CAAqB,CAArB,IAA0B,KAAK1C,OAAL,CAAaI,OAA3C;AACD,SAFD,MAEO;AACLgB,UAAAA,CAAC,GAAGI,KAAK,CAACmB,iBAAN,CAAwB,CAAxB,IAA6B,KAAK3C,OAAL,CAAaI,OAA9C;AACD;;AACD;;AACF;AACE,cAAM,IAAIK,SAAImC,IAAR,CAAa,iBAAb,EAAgC,qCAAhC,CAAN;AA1BJ;;AA6BAnB,IAAAA,GAAG,CAACoB,QAAJ,CAAa,KAAK,KAAK/C,IAAvB,EAA6BoB,CAA7B,EAAgCE,CAAC,GAAG,CAApC;AACAK,IAAAA,GAAG,CAACqB,OAAJ;AACA,WAAO,IAAP;AACD;;AAlF0C;;QAAhCpD,S,GAAAA,S","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n\nimport { Vex } from './vex';\nimport { StaveModifier } from './stavemodifier';\nimport { TextNote } from './textnote';\n\nexport class StaveText extends StaveModifier {\n  static get CATEGORY() { return 'stavetext'; }\n\n  constructor(text, position, options) {\n    super();\n    this.setAttribute('type', 'StaveText');\n\n    this.setWidth(16);\n    this.text = text;\n    this.position = position;\n    this.options = {\n      shift_x: 0,\n      shift_y: 0,\n      justification: TextNote.Justification.CENTER,\n    };\n    Vex.Merge(this.options, options);\n\n    this.font = {\n      family: 'times',\n      size: 16,\n      weight: 'normal',\n    };\n  }\n\n  getCategory() { return StaveText.CATEGORY; }\n  setStaveText(text) { this.text = text; return this; }\n  setShiftX(x) { this.shift_x = x; return this; }\n  setShiftY(y) { this.shift_y = y; return this; }\n\n  setFont(font) {\n    Vex.Merge(this.font, font);\n  }\n\n  setText(text) {\n    this.text = text;\n  }\n\n  draw(stave) {\n    const ctx = stave.checkContext();\n    this.setRendered();\n\n    ctx.save();\n    ctx.lineWidth = 2;\n    ctx.setFont(this.font.family, this.font.size, this.font.weight);\n    const text_width = ctx.measureText('' + this.text).width;\n\n    let x;\n    let y;\n    const Position = StaveModifier.Position;\n    const Justification = TextNote.Justification;\n    switch (this.position) {\n      case Position.LEFT:\n      case Position.RIGHT:\n        y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n        if (this.position === Position.LEFT) {\n          x = stave.getX() - text_width - 24 + this.options.shift_x;\n        } else {\n          x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n        }\n        break;\n      case Position.ABOVE:\n      case Position.BELOW:\n        x = stave.getX() + this.options.shift_x;\n        if (this.options.justification === Justification.CENTER) {\n          x += stave.getWidth() / 2 - text_width / 2;\n        } else if (this.options.justification === Justification.RIGHT) {\n          x += stave.getWidth() - text_width;\n        }\n\n        if (this.position === Position.ABOVE) {\n          y = stave.getYForTopText(2) + this.options.shift_y;\n        } else {\n          y = stave.getYForBottomText(2) + this.options.shift_y;\n        }\n        break;\n      default:\n        throw new Vex.RERR('InvalidPosition', 'Value Must be in Modifier.Position.');\n    }\n\n    ctx.fillText('' + this.text, x, y + 4);\n    ctx.restore();\n    return this;\n  }\n}\n"],"file":"stavetext.js"}