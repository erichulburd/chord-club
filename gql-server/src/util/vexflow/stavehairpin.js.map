{"version":3,"sources":["../../../node_modules/vexflow/src/stavehairpin.js"],"names":["StaveHairpin","Element","type","CRESC","DECRESC","FormatByTicksAndDraw","ctx","formatter","notes","position","options","ppt","pixelsPerTick","Vex","RuntimeError","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","height","y_shift","left_shift_px","right_shift_px","first_note","last_note","setContext","setRenderOptions","setPosition","draw","constructor","setAttribute","hairpin","Modifier","Position","BELOW","render_options","setNotes","ABOVE","renderHairpin","params","checkContext","dis","first_y","staff_height","l_shift","r_shift","beginPath","moveTo","last_x","lineTo","first_x","stroke","closePath","setRendered","firstNote","lastNote","start","getModifierStartXY","end","x","getStave","y","last_y"],"mappings":"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","sourcesContent":["// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\nimport { Vex } from './vex';\nimport { Element } from './element';\nimport { Modifier } from './modifier';\n\nexport class StaveHairpin extends Element {\n  static get type() {\n    return {\n      CRESC: 1,\n      DECRESC: 2,\n    };\n  }\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n    const ppt = formatter.pixelsPerTick;\n\n    if (ppt == null) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'A valid Formatter must be provide to draw offsets by ticks.'\n      );\n    }\n\n    const l_shift_px = ppt * options.left_shift_ticks;\n    const r_shift_px = ppt * options.right_shift_ticks;\n\n    const hairpin_options = {\n      height: options.height,\n      y_shift: options.y_shift,\n      left_shift_px: l_shift_px,\n      right_shift_px: r_shift_px };\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note,\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  }\n\n  /**\n   * Create a new hairpin from the specified notes.\n   *\n   * @constructor\n   * @param {!Object} notes The notes to tie up.\n   * @param {!Object} type The type of hairpin\n   */\n  constructor(notes, type) {\n    /**\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     *\n     **/\n    super();\n    this.setAttribute('type', 'StaveHairpin');\n    this.notes = notes;\n    this.hairpin = type;\n    this.position = Modifier.Position.BELOW;\n\n    this.render_options = {\n      height: 10,\n      y_shift: 0, // vertical offset\n      left_shift_px: 0, // left horizontal offset\n      right_shift_px: 0, // right horizontal offset\n    };\n\n    this.setNotes(notes);\n  }\n\n  setPosition(position) {\n    if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n      this.position = position;\n    }\n    return this;\n  }\n\n  setRenderOptions(options) {\n    if (\n      options.height != null &&\n      options.y_shift != null &&\n      options.left_shift_px != null &&\n      options.right_shift_px != null\n    ) {\n      this.render_options = options;\n    }\n    return this;\n  }\n\n  /**\n   * Set the notes to attach this hairpin to.\n   *\n   * @param {!Object} notes The start and end notes.\n   */\n  setNotes(notes) {\n    if (!notes.first_note && !notes.last_note) {\n      throw new Vex.RuntimeError(\n        'BadArguments',\n        'Hairpin needs to have either first_note or last_note set.'\n      );\n    }\n\n    // Success. Lets grab 'em notes.\n    this.first_note = notes.first_note;\n    this.last_note = notes.last_note;\n    return this;\n  }\n\n  renderHairpin(params) {\n    const ctx = this.checkContext();\n    let dis = this.render_options.y_shift + 20;\n    let y_shift = params.first_y;\n\n    if (this.position === Modifier.Position.ABOVE) {\n      dis = -dis + 30;\n      y_shift = params.first_y - params.staff_height;\n    }\n\n    const l_shift = this.render_options.left_shift_px;\n    const r_shift = this.render_options.right_shift_px;\n\n    ctx.beginPath();\n\n    switch (this.hairpin) {\n      case StaveHairpin.type.CRESC:\n        ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n        break;\n      case StaveHairpin.type.DECRESC:\n        ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n        ctx.lineTo(params.last_x + r_shift, y_shift + (this.render_options.height / 2) + dis);\n        ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n        break;\n      default:\n        // Default is NONE, so nothing to draw\n        break;\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  draw() {\n    this.checkContext();\n    this.setRendered();\n\n    const firstNote = this.first_note;\n    const lastNote = this.last_note;\n\n    const start = firstNote.getModifierStartXY(this.position, 0);\n    const end = lastNote.getModifierStartXY(this.position, 0);\n\n    this.renderHairpin({\n      first_x: start.x,\n      last_x: end.x,\n      first_y: firstNote.getStave().y + firstNote.getStave().height,\n      last_y: lastNote.getStave().y + lastNote.getStave().height,\n      staff_height: firstNote.getStave().height,\n    });\n    return true;\n  }\n}\n"],"file":"stavehairpin.js"}